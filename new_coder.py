# YDC_HT[256][2] = { {0,2},{2,3},{3,3},{4,3},{5,3},{6,3},{14,4},{30,5},{62,6},{126,7},{254,8},{510,9} }
decode_YDC_HT = {"00": 0,
                 "010": 1,
                 "011": 2,
                 "100": 3,
                 "101": 4,
                 "110": 5,
                 "1110": 6,
                 "11110": 7,
                 "111110": 8,
                 "1111110": 9,
                 "11111110": 10,
                 "111111110": 11}
encode_YDC_HT = [[0, 0],  # 0
                 [0, 1, 0],  # 1
                 [0, 1, 1],  # 2
                 [1, 0, 0],  # 3
                 [1, 0, 1],  # 4
                 [1, 1, 0],  # 5
                 [1, 1, 1, 0],  # 6
                 [1, 1, 1, 1, 0],  # 7
                 [1, 1, 1, 1, 1, 0],  # 8
                 [1, 1, 1, 1, 1, 1, 0],  # 9
                 [1, 1, 1, 1, 1, 1, 1, 0],  # 10
                 [1, 1, 1, 1, 1, 1, 1, 1, 0]]  # 11

decode_UVDC_HT = {'00': 0,
                  '01': 1,
                  '10': 2,
                  '110': 3,
                  '1110': 4,
                  '11110': 5,
                  '111110': 6,
                  '1111110': 7,
                  '11111110': 8,
                  '111111110': 9,
                  '1111111110': 10,
                  '11111111110': 11}

encode_UVDC_HT = [[0, 0],  # 0
                  [0, 1],  # 1
                  [1, 0],  # 2
                  [1, 1, 0],  # 3
                  [1, 1, 1, 0],  # 4
                  [1, 1, 1, 1, 0],  # 5
                  [1, 1, 1, 1, 1, 0],  # 6
                  [1, 1, 1, 1, 1, 1, 0],  # 7
                  [1, 1, 1, 1, 1, 1, 1, 0],  # 8
                  [1, 1, 1, 1, 1, 1, 1, 1, 0],  # 9
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0],  # 10
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]]  # 11

decode_UVAC_HT = {'00': 0,
                  '01': 1,
                  '100': 2,
                  '1010': 3,
                  '11000': 4,
                  '11001': 5,
                  '111000': 6,
                  '1111000': 7,
                  '111110100': 8,
                  '1111110110': 9,
                  '111111110100': 10,
                  '1011': 17,
                  '111001': 18,
                  '11110110': 19,
                  '111110101': 20,
                  '11111110110': 21,
                  '111111110101': 22,
                  '1111111110001000': 23,
                  '1111111110001001': 24,
                  '1111111110001010': 25,
                  '1111111110001011': 26,
                  '11010': 33,
                  '11110111': 34,
                  '1111110111': 35,
                  '111111110110': 36,
                  '111111111000010': 37,
                  '1111111110001100': 38,
                  '1111111110001101': 39,
                  '1111111110001110': 40,
                  '1111111110001111': 41,
                  '1111111110010000': 42,
                  '11011': 49,
                  '11111000': 50,
                  '1111111000': 51,
                  '111111110111': 52,
                  '1111111110010001': 53,
                  '1111111110010010': 54,
                  '1111111110010011': 55,
                  '1111111110010100': 56,
                  '1111111110010101': 57,
                  '1111111110010110': 58,
                  '111010': 65,
                  '111110110': 66,
                  '1111111110010111': 67,
                  '1111111110011000': 68,
                  '1111111110011001': 69,
                  '1111111110011010': 70,
                  '1111111110011011': 71,
                  '1111111110011100': 72,
                  '1111111110011101': 73,
                  '1111111110011110': 74,
                  '111011': 81,
                  '1111111001': 82,
                  '1111111110011111': 83,
                  '1111111110100000': 84,
                  '1111111110100001': 85,
                  '1111111110100010': 86,
                  '1111111110100011': 87,
                  '1111111110100100': 88,
                  '1111111110100101': 89,
                  '1111111110100110': 90,
                  '1111001': 97,
                  '11111110111': 98,
                  '1111111110100111': 99,
                  '1111111110101000': 100,
                  '1111111110101001': 101,
                  '1111111110101010': 102,
                  '1111111110101011': 103,
                  '1111111110101100': 104,
                  '1111111110101101': 105,
                  '1111111110101110': 106,
                  '1111010': 113,
                  '11111111000': 114,
                  '1111111110101111': 115,
                  '1111111110110000': 116,
                  '1111111110110001': 117,
                  '1111111110110010': 118,
                  '1111111110110011': 119,
                  '1111111110110100': 120,
                  '1111111110110101': 121,
                  '1111111110110110': 122,
                  '11111001': 129,
                  '1111111110110111': 130,
                  '1111111110111000': 131,
                  '1111111110111001': 132,
                  '1111111110111010': 133,
                  '1111111110111011': 134,
                  '1111111110111100': 135,
                  '1111111110111101': 136,
                  '1111111110111110': 137,
                  '1111111110111111': 138,
                  '111110111': 145,
                  '1111111111000000': 146,
                  '1111111111000001': 147,
                  '1111111111000010': 148,
                  '1111111111000011': 149,
                  '1111111111000100': 150,
                  '1111111111000101': 151,
                  '1111111111000110': 152,
                  '1111111111000111': 153,
                  '1111111111001000': 154,
                  '111111000': 161,
                  '1111111111001001': 162,
                  '1111111111001010': 163,
                  '1111111111001011': 164,
                  '1111111111001100': 165,
                  '1111111111001101': 166,
                  '1111111111001110': 167,
                  '1111111111001111': 168,
                  '1111111111010000': 169,
                  '1111111111010001': 170,
                  '111111001': 177,
                  '1111111111010010': 178,
                  '1111111111010011': 179,
                  '1111111111010100': 180,
                  '1111111111010101': 181,
                  '1111111111010110': 182,
                  '1111111111010111': 183,
                  '1111111111011000': 184,
                  '1111111111011001': 185,
                  '1111111111011010': 186,
                  '111111010': 193,
                  '1111111111011011': 194,
                  '1111111111011100': 195,
                  '1111111111011101': 196,
                  '1111111111011110': 197,
                  '1111111111011111': 198,
                  '1111111111100000': 199,
                  '1111111111100001': 200,
                  '1111111111100010': 201,
                  '1111111111100011': 202,
                  '11111111001': 209,
                  '1111111111100100': 210,
                  '1111111111100101': 211,
                  '1111111111100110': 212,
                  '1111111111100111': 213,
                  '1111111111101000': 214,
                  '1111111111101001': 215,
                  '1111111111101010': 216,
                  '1111111111101011': 217,
                  '1111111111101100': 218,
                  '11111111100000': 225,
                  '1111111111101101': 226,
                  '1111111111101110': 227,
                  '1111111111101111': 228,
                  '1111111111110000': 229,
                  '1111111111110001': 230,
                  '1111111111110010': 231,
                  '1111111111110011': 232,
                  '1111111111110100': 233,
                  '1111111111110101': 234,
                  '1111111010': 240,
                  '111111111000011': 241,
                  '1111111111110110': 242,
                  '1111111111110111': 243,
                  '1111111111111000': 244,
                  '1111111111111001': 245,
                  '1111111111111010': 246,
                  '1111111111111011': 247,
                  '1111111111111100': 248,
                  '1111111111111101': 249,
                  '1111111111111110': 250}

encode_UVAC_HT = [[0, 0],  # 0
                  [0, 1],  # 1
                  [1, 0, 0],  # 2
                  [1, 0, 1, 0],  # 3
                  [1, 1, 0, 0, 0],  # 4
                  [1, 1, 0, 0, 1],  # 5
                  [1, 1, 1, 0, 0, 0],  # 6
                  [1, 1, 1, 1, 0, 0, 0],  # 7
                  [1, 1, 1, 1, 1, 0, 1, 0, 0],  # 8
                  [1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 9
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],  # 10
                  [0],  # 11
                  [0],  # 12
                  [0],  # 13
                  [0],  # 14
                  [0],  # 15
                  [0],  # 16
                  [1, 0, 1, 1],  # 17
                  [1, 1, 1, 0, 0, 1],  # 18
                  [1, 1, 1, 1, 0, 1, 1, 0],  # 19
                  [1, 1, 1, 1, 1, 0, 1, 0, 1],  # 20
                  [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 21
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1],  # 22
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0],  # 23
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1],  # 24
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0],  # 25
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1],  # 26
                  [0],  # 27
                  [0],  # 28
                  [0],  # 29
                  [0],  # 30
                  [0],  # 31
                  [0],  # 32
                  [1, 1, 0, 1, 0],  # 33
                  [1, 1, 1, 1, 0, 1, 1, 1],  # 34
                  [1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 35
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 36
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0],  # 37
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0],  # 38
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1],  # 39
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0],  # 40
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1],  # 41
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0],  # 42
                  [0],  # 43
                  [0],  # 44
                  [0],  # 45
                  [0],  # 46
                  [0],  # 47
                  [0],  # 48
                  [1, 1, 0, 1, 1],  # 49
                  [1, 1, 1, 1, 1, 0, 0, 0],  # 50
                  [1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 51
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 52
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1],  # 53
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0],  # 54
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1],  # 55
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0],  # 56
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1],  # 57
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0],  # 58
                  [0],  # 59
                  [0],  # 60
                  [0],  # 61
                  [0],  # 62
                  [0],  # 63
                  [0],  # 64
                  [1, 1, 1, 0, 1, 0],  # 65
                  [1, 1, 1, 1, 1, 0, 1, 1, 0],  # 66
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1],  # 67
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0],  # 68
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1],  # 69
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0],  # 70
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1],  # 71
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],  # 72
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1],  # 73
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0],  # 74
                  [0],  # 75
                  [0],  # 76
                  [0],  # 77
                  [0],  # 78
                  [0],  # 79
                  [0],  # 80
                  [1, 1, 1, 0, 1, 1],  # 81
                  [1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 82
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1],  # 83
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0],  # 84
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1],  # 85
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0],  # 86
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1],  # 87
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0],  # 88
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1],  # 89
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0],  # 90
                  [0],  # 91
                  [0],  # 92
                  [0],  # 93
                  [0],  # 94
                  [0],  # 95
                  [0],  # 96
                  [1, 1, 1, 1, 0, 0, 1],  # 97
                  [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 98
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1],  # 99
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0],  # 100
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1],  # 101
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0],  # 102
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1],  # 103
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0],  # 104
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],  # 105
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0],  # 106
                  [0],  # 107
                  [0],  # 108
                  [0],  # 109
                  [0],  # 110
                  [0],  # 111
                  [0],  # 112
                  [1, 1, 1, 1, 0, 1, 0],  # 113
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 114
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1],  # 115
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0],  # 116
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1],  # 117
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],  # 118
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1],  # 119
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0],  # 120
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1],  # 121
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0],  # 122
                  [0],  # 123
                  [0],  # 124
                  [0],  # 125
                  [0],  # 126
                  [0],  # 127
                  [0],  # 128
                  [1, 1, 1, 1, 1, 0, 0, 1],  # 129
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1],  # 130
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0],  # 131
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],  # 132
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0],  # 133
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1],  # 134
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0],  # 135
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1],  # 136
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0],  # 137
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],  # 138
                  [0],  # 139
                  [0],  # 140
                  [0],  # 141
                  [0],  # 142
                  [0],  # 143
                  [0],  # 144
                  [1, 1, 1, 1, 1, 0, 1, 1, 1],  # 145
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],  # 146
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1],  # 147
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0],  # 148
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1],  # 149
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0],  # 150
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1],  # 151
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0],  # 152
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1],  # 153
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],  # 154
                  [0],  # 155
                  [0],  # 156
                  [0],  # 157
                  [0],  # 158
                  [0],  # 159
                  [0],  # 160
                  [1, 1, 1, 1, 1, 1, 0, 0, 0],  # 161
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1],  # 162
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0],  # 163
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1],  # 164
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0],  # 165
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],  # 166
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0],  # 167
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1],  # 168
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0],  # 169
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1],  # 170
                  [0],  # 171
                  [0],  # 172
                  [0],  # 173
                  [0],  # 174
                  [0],  # 175
                  [0],  # 176
                  [1, 1, 1, 1, 1, 1, 0, 0, 1],  # 177
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0],  # 178
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1],  # 179
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0],  # 180
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1],  # 181
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0],  # 182
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1],  # 183
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0],  # 184
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1],  # 185
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0],  # 186
                  [0],  # 187
                  [0],  # 188
                  [0],  # 189
                  [0],  # 190
                  [0],  # 191
                  [0],  # 192
                  [1, 1, 1, 1, 1, 1, 0, 1, 0],  # 193
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1],  # 194
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0],  # 195
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],  # 196
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0],  # 197
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],  # 198
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],  # 199
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],  # 200
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0],  # 201
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],  # 202
                  [0],  # 203
                  [0],  # 204
                  [0],  # 205
                  [0],  # 206
                  [0],  # 207
                  [0],  # 208
                  [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 209
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0],  # 210
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1],  # 211
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0],  # 212
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1],  # 213
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0],  # 214
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1],  # 215
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0],  # 216
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],  # 217
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0],  # 218
                  [0],  # 219
                  [0],  # 220
                  [0],  # 221
                  [0],  # 222
                  [0],  # 223
                  [0],  # 224
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],  # 225
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1],  # 226
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0],  # 227
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],  # 228
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],  # 229
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1],  # 230
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0],  # 231
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1],  # 232
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],  # 233
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1],  # 234
                  [0],  # 235
                  [0],  # 236
                  [0],  # 237
                  [0],  # 238
                  [0],  # 239
                  [1, 1, 1, 1, 1, 1, 1, 0, 1, 0],  # 240
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1],  # 241
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 242
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 243
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 244
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 245
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],  # 246
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1],  # 247
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],  # 248
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],  # 249
                  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],  # 250
                  [0],  # 251
                  [0],  # 252
                  [0],  # 253
                  [0],  # 254
                  [0]]  # 255

decode_YAC_HT = {'1010': 0,
                 '00': 1,
                 '01': 2,
                 '100': 3,
                 '1011': 4,
                 '11010': 5,
                 '1111000': 6,
                 '11111000': 7,
                 '1111110110': 8,
                 '1111111110000010': 9,
                 '1111111110000011': 10,
                 '1100': 17,
                 '11011': 18,
                 '1111001': 19,
                 '111110110': 20,
                 '11111110110': 21,
                 '1111111110000100': 22,
                 '1111111110000101': 23,
                 '1111111110000110': 24,
                 '1111111110000111': 25,
                 '1111111110001000': 26,
                 '11100': 33,
                 '11111001': 34,
                 '1111110111': 35,
                 '111111110100': 36,
                 '1111111110001001': 37,
                 '1111111110001010': 38,
                 '1111111110001011': 39,
                 '1111111110001100': 40,
                 '1111111110001101': 41,
                 '1111111110001110': 42,
                 '111010': 49,
                 '111110111': 50,
                 '111111110101': 51,
                 '1111111110001111': 52,
                 '1111111110010000': 53,
                 '1111111110010001': 54,
                 '1111111110010010': 55,
                 '1111111110010011': 56,
                 '1111111110010100': 57,
                 '1111111110010101': 58,
                 '111011': 65,
                 '1111111000': 66,
                 '1111111110010110': 67,
                 '1111111110010111': 68,
                 '1111111110011000': 69,
                 '1111111110011001': 70,
                 '1111111110011010': 71,
                 '1111111110011011': 72,
                 '1111111110011100': 73,
                 '1111111110011101': 74,
                 '1111010': 81,
                 '11111110111': 82,
                 '1111111110011110': 83,
                 '1111111110011111': 84,
                 '1111111110100000': 85,
                 '1111111110100001': 86,
                 '1111111110100010': 87,
                 '1111111110100011': 88,
                 '1111111110100100': 89,
                 '1111111110100101': 90,
                 '1111011': 97,
                 '111111110110': 98,
                 '1111111110100110': 99,
                 '1111111110100111': 100,
                 '1111111110101000': 101,
                 '1111111110101001': 102,
                 '1111111110101010': 103,
                 '1111111110101011': 104,
                 '1111111110101100': 105,
                 '1111111110101101': 106,
                 '11111010': 113,
                 '111111110111': 114,
                 '1111111110101110': 115,
                 '1111111110101111': 116,
                 '1111111110110000': 117,
                 '1111111110110001': 118,
                 '1111111110110010': 119,
                 '1111111110110011': 120,
                 '1111111110110100': 121,
                 '1111111110110101': 122,
                 '111111000': 129,
                 '111111111000000': 130,
                 '1111111110110110': 131,
                 '1111111110110111': 132,
                 '1111111110111000': 133,
                 '1111111110111001': 134,
                 '1111111110111010': 135,
                 '1111111110111011': 136,
                 '1111111110111100': 137,
                 '1111111110111101': 138,
                 '111111001': 145,
                 '1111111110111110': 146,
                 '1111111110111111': 147,
                 '1111111111000000': 148,
                 '1111111111000001': 149,
                 '1111111111000010': 150,
                 '1111111111000011': 151,
                 '1111111111000100': 152,
                 '1111111111000101': 153,
                 '1111111111000110': 154,
                 '111111010': 161,
                 '1111111111000111': 162,
                 '1111111111001000': 163,
                 '1111111111001001': 164,
                 '1111111111001010': 165,
                 '1111111111001011': 166,
                 '1111111111001100': 167,
                 '1111111111001101': 168,
                 '1111111111001110': 169,
                 '1111111111001111': 170,
                 '1111111001': 177,
                 '1111111111010000': 178,
                 '1111111111010001': 179,
                 '1111111111010010': 180,
                 '1111111111010011': 181,
                 '1111111111010100': 182,
                 '1111111111010101': 183,
                 '1111111111010110': 184,
                 '1111111111010111': 185,
                 '1111111111011000': 186,
                 '1111111010': 193,
                 '1111111111011001': 194,
                 '1111111111011010': 195,
                 '1111111111011011': 196,
                 '1111111111011100': 197,
                 '1111111111011101': 198,
                 '1111111111011110': 199,
                 '1111111111011111': 200,
                 '1111111111100000': 201,
                 '1111111111100001': 202,
                 '11111111000': 209,
                 '1111111111100010': 210,
                 '1111111111100011': 211,
                 '1111111111100100': 212,
                 '1111111111100101': 213,
                 '1111111111100110': 214,
                 '1111111111100111': 215,
                 '1111111111101000': 216,
                 '1111111111101001': 217,
                 '1111111111101010': 218,
                 '1111111111101011': 225,
                 '1111111111101100': 226,
                 '1111111111101101': 227,
                 '1111111111101110': 228,
                 '1111111111101111': 229,
                 '1111111111110000': 230,
                 '1111111111110001': 231,
                 '1111111111110010': 232,
                 '1111111111110011': 233,
                 '1111111111110100': 234,
                 '11111111001': 240,
                 '1111111111110101': 241,
                 '1111111111110110': 242,
                 '1111111111110111': 243,
                 '1111111111111000': 244,
                 '1111111111111001': 245,
                 '1111111111111010': 246,
                 '1111111111111011': 247,
                 '1111111111111100': 248,
                 '1111111111111101': 249,
                 '1111111111111110': 250}

encode_YAC_HT = [[1, 0, 1, 0],  # 0
                 [0, 0],  # 1
                 [0, 1],  # 2
                 [1, 0, 0],  # 3
                 [1, 0, 1, 1],  # 4
                 [1, 1, 0, 1, 0],  # 5
                 [1, 1, 1, 1, 0, 0, 0],  # 6
                 [1, 1, 1, 1, 1, 0, 0, 0],  # 7
                 [1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 8
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0],  # 9
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1],  # 10
                 [0],  # 11
                 [0],  # 12
                 [0],  # 13
                 [0],  # 14
                 [0],  # 15
                 [0],  # 16
                 [1, 1, 0, 0],  # 17
                 [1, 1, 0, 1, 1],  # 18
                 [1, 1, 1, 1, 0, 0, 1],  # 19
                 [1, 1, 1, 1, 1, 0, 1, 1, 0],  # 20
                 [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 21
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0],  # 22
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1],  # 23
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0],  # 24
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],  # 25
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0],  # 26
                 [0],  # 27
                 [0],  # 28
                 [0],  # 29
                 [0],  # 30
                 [0],  # 31
                 [0],  # 32
                 [1, 1, 1, 0, 0],  # 33
                 [1, 1, 1, 1, 1, 0, 0, 1],  # 34
                 [1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 35
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],  # 36
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1],  # 37
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0],  # 38
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1],  # 39
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0],  # 40
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1],  # 41
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0],  # 42
                 [0],  # 43
                 [0],  # 44
                 [0],  # 45
                 [0],  # 46
                 [0],  # 47
                 [0],  # 48
                 [1, 1, 1, 0, 1, 0],  # 49
                 [1, 1, 1, 1, 1, 0, 1, 1, 1],  # 50
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1],  # 51
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1],  # 52
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0],  # 53
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1],  # 54
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0],  # 55
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1],  # 56
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0],  # 57
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1],  # 58
                 [0],  # 59
                 [0],  # 60
                 [0],  # 61
                 [0],  # 62
                 [0],  # 63
                 [0],  # 64
                 [1, 1, 1, 0, 1, 1],  # 65
                 [1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 66
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0],  # 67
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1],  # 68
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0],  # 69
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1],  # 70
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0],  # 71
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1],  # 72
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],  # 73
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1],  # 74
                 [0],  # 75
                 [0],  # 76
                 [0],  # 77
                 [0],  # 78
                 [0],  # 79
                 [0],  # 80
                 [1, 1, 1, 1, 0, 1, 0],  # 81
                 [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 82
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0],  # 83
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1],  # 84
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0],  # 85
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1],  # 86
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0],  # 87
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1],  # 88
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0],  # 89
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1],  # 90
                 [0],  # 91
                 [0],  # 92
                 [0],  # 93
                 [0],  # 94
                 [0],  # 95
                 [0],  # 96
                 [1, 1, 1, 1, 0, 1, 1],  # 97
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 98
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0],  # 99
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1],  # 100
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0],  # 101
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1],  # 102
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0],  # 103
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1],  # 104
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0],  # 105
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],  # 106
                 [0],  # 107
                 [0],  # 108
                 [0],  # 109
                 [0],  # 110
                 [0],  # 111
                 [0],  # 112
                 [1, 1, 1, 1, 1, 0, 1, 0],  # 113
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 114
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0],  # 115
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1],  # 116
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0],  # 117
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1],  # 118
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],  # 119
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1],  # 120
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0],  # 121
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1],  # 122
                 [0],  # 123
                 [0],  # 124
                 [0],  # 125
                 [0],  # 126
                 [0],  # 127
                 [0],  # 128
                 [1, 1, 1, 1, 1, 1, 0, 0, 0],  # 129
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],  # 130
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0],  # 131
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1],  # 132
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0],  # 133
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1],  # 134
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0],  # 135
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1],  # 136
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0],  # 137
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1],  # 138
                 [0],  # 139
                 [0],  # 140
                 [0],  # 141
                 [0],  # 142
                 [0],  # 143
                 [0],  # 144
                 [1, 1, 1, 1, 1, 1, 0, 0, 1],  # 145
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0],  # 146
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],  # 147
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],  # 148
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1],  # 149
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0],  # 150
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1],  # 151
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0],  # 152
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1],  # 153
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0],  # 154
                 [0],  # 155
                 [0],  # 156
                 [0],  # 157
                 [0],  # 158
                 [0],  # 159
                 [0],  # 160
                 [1, 1, 1, 1, 1, 1, 0, 1, 0],  # 161
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1],  # 162
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],  # 163
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1],  # 164
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0],  # 165
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1],  # 166
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0],  # 167
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],  # 168
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0],  # 169
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1],  # 170
                 [0],  # 171
                 [0],  # 172
                 [0],  # 173
                 [0],  # 174
                 [0],  # 175
                 [0],  # 176
                 [1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 177
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0],  # 178
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1],  # 179
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0],  # 180
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1],  # 181
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0],  # 182
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1],  # 183
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0],  # 184
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1],  # 185
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0],  # 186
                 [0],  # 187
                 [0],  # 188
                 [0],  # 189
                 [0],  # 190
                 [0],  # 191
                 [0],  # 192
                 [1, 1, 1, 1, 1, 1, 1, 0, 1, 0],  # 193
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1],  # 194
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0],  # 195
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1],  # 196
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0],  # 197
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1],  # 198
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0],  # 199
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1],  # 200
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],  # 201
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],  # 202
                 [0],  # 203
                 [0],  # 204
                 [0],  # 205
                 [0],  # 206
                 [0],  # 207
                 [0],  # 208
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 209
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0],  # 210
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],  # 211
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0],  # 212
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1],  # 213
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0],  # 214
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1],  # 215
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0],  # 216
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1],  # 217
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0],  # 218
                 [0],  # 219
                 [0],  # 220
                 [0],  # 221
                 [0],  # 222
                 [0],  # 223
                 [0],  # 224
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],  # 225
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0],  # 226
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1],  # 227
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0],  # 228
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],  # 229
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],  # 230
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1],  # 231
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0],  # 232
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1],  # 233
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0],  # 234
                 [0],  # 235
                 [0],  # 236
                 [0],  # 237
                 [0],  # 238
                 [0],  # 239
                 [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 240
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1],  # 241
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0],  # 242
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],  # 243
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],  # 244
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1],  # 245
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],  # 246
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1],  # 247
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],  # 248
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],  # 249
                 [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],  # 250
                 [0],  # 251
                 [0],  # 252
                 [0],  # 253
                 [0],  # 254
                 [0]]  # 255

# YAC_HT[256][2] = {
#     {10,4},{0,2},{1,2},{4,3},{11,4},{26,5},{120,7},{248,8},{1014,10},{65410,16},{65411,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {12,4},{27,5},{121,7},{502,9},{2038,11},{65412,16},{65413,16},{65414,16},{65415,16},{65416,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {28,5},{249,8},{1015,10},{4084,12},{65417,16},{65418,16},{65419,16},{65420,16},{65421,16},{65422,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {58,6},{503,9},{4085,12},{65423,16},{65424,16},{65425,16},{65426,16},{65427,16},{65428,16},{65429,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {59,6},{1016,10},{65430,16},{65431,16},{65432,16},{65433,16},{65434,16},{65435,16},{65436,16},{65437,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {122,7},{2039,11},{65438,16},{65439,16},{65440,16},{65441,16},{65442,16},{65443,16},{65444,16},{65445,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {123,7},{4086,12},{65446,16},{65447,16},{65448,16},{65449,16},{65450,16},{65451,16},{65452,16},{65453,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {250,8},{4087,12},{65454,16},{65455,16},{65456,16},{65457,16},{65458,16},{65459,16},{65460,16},{65461,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {504,9},{32704,15},{65462,16},{65463,16},{65464,16},{65465,16},{65466,16},{65467,16},{65468,16},{65469,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {505,9},{65470,16},{65471,16},{65472,16},{65473,16},{65474,16},{65475,16},{65476,16},{65477,16},{65478,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {506,9},{65479,16},{65480,16},{65481,16},{65482,16},{65483,16},{65484,16},{65485,16},{65486,16},{65487,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {1017,10},{65488,16},{65489,16},{65490,16},{65491,16},{65492,16},{65493,16},{65494,16},{65495,16},{65496,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {1018,10},{65497,16},{65498,16},{65499,16},{65500,16},{65501,16},{65502,16},{65503,16},{65504,16},{65505,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {2040,11},{65506,16},{65507,16},{65508,16},{65509,16},{65510,16},{65511,16},{65512,16},{65513,16},{65514,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {65515,16},{65516,16},{65517,16},{65518,16},{65519,16},{65520,16},{65521,16},{65522,16},{65523,16},{65524,16},{0,0},{0,0},{0,0},{0,0},{0,0},
#     {2041,11},{65525,16},{65526,16},{65527,16},{65528,16},{65529,16},{65530,16},{65531,16},{65532,16},{65533,16},{65534,16},{0,0},{0,0},{0,0},{0,0},{0,0}
# };

import HuffmanTable
HT = HuffmanTable.HuffmanTable()
HT2 = HuffmanTable.HuffmanTable()
HT3 = HuffmanTable.HuffmanTable()
HT4 = HuffmanTable.HuffmanTable()

def toBits(val):  # принимает число, возвращает массив бит
    bits = bin(val)
    bits = bits[2:]
    answer = list(map(int, bits))
    return answer


def fromBits(val):  # принимает строку из битов, возвращает число
    st = "".join(val)
    answer = int(st, 2)
    if val[0] == '0':
        answer = answer - 2 ** len(val) + 1
    return answer


def calcBits(val):  # принимает число (кроме 0) и возвращает битовое представление и длину
    bits = [0, 1]
    tmp = val
    if val < 0:
        tmp = -tmp
        val -= 1
    while tmp > 1:
        bits[1] += 1
        tmp >>= 1
    bits[0] = list(map(int, bin(val & ((1 << bits[1]) - 1))[2:]))
    while len(bits[0]) < bits[1]:
        bits[0] = [0] + bits[0]
    return bits


# для Y канала
def decodeDC(bits):
    st = "".join(list(map(str, bits)))
    lenght, offset = HT.find(st)
    if lenght == 0:
        return 0, offset
    DC_in_bits = st[offset:offset + lenght]
    DC = fromBits("".join(DC_in_bits))
    return DC, offset + lenght


def encodeDC(DC, prevDC):
    bits = []
    diff = DC - prevDC
    if diff == 0:
        bits = [0, 0]
    else:
        val, step = calcBits(diff)
        bits += encode_YDC_HT[step]
        bits += val
    return bits


def encodeAC(AC, zeros):
    # print("encodeAC", AC, zeros)
    bits = []
    val, step = calcBits(AC)
    # print(bin((zeros << 4) + step))
    # print((zeros << 4) + step)
    bits += encode_YAC_HT[(zeros << 4) + step]
    bits += val
    # print("val", val, step)
    return bits


def decodeAC(bits):
    st = "".join(list(map(str, bits)))
    code, offset = HT2.find(st)
    # print("code+offset", code, offset)
    if code == 0xF0:  # если 16 нулей
        return 0, 15, offset
    if code == 0:  # если EOB
        return 0, 64, offset
    zeros = code >> 4
    length = code & 0x0F
    # print("zer", zeros, length)

    AC_in_bits = st[offset:offset + length]
    AC = fromBits("".join(AC_in_bits))
    return AC, zeros, offset + length


# для U и V каналов
def decodeDC_U_V(bits):
    st = "".join(list(map(str, bits)))
    lenght, offset = HT3.find(st)
    if lenght == 0:
        return 0, offset
    DC_in_bits = st[offset:offset + lenght]
    DC = fromBits("".join(DC_in_bits))
    return DC, offset + lenght


def encodeDC_U_V(DC, prevDC):
    bits = []
    diff = DC - prevDC
    if diff == 0:
        bits = [0, 0]
    else:
        val, step = calcBits(diff)
        bits += encode_UVDC_HT[step]
        bits += val
    return bits


def encodeAC_U_V(AC, zeros):
    # print("encodeAC", AC, zeros)
    bits = []
    val, step = calcBits(AC)
    # print(bin((zeros << 4) + step))
    # print((zeros << 4) + step)
    bits += encode_UVAC_HT[(zeros << 4) + step]
    bits += val
    # print("val", val, step)
    return bits


def decodeAC_U_V(bits):
    st = "".join(list(map(str, bits)))
    code, offset = HT4.find(st)
    # print("code+offset", code, offset)
    if code == 0xF0:  # если 16 нулей
        return 0, 15, offset
    if code == 0:  # если EOB
        return 0, 64, offset
    zeros = code >> 4
    length = code & 0x0F
    # print("zer", zeros, length)

    AC_in_bits = st[offset:offset + length]
    AC = fromBits("".join(AC_in_bits))
    return AC, zeros, offset + length


# ----------------------------------------------------------------------------

def encoder(blocks):
    bits = []
    prev_DCY = 0
    prev_DCU = 0
    prev_DCV = 0
    for i in range(len(blocks)):
        if i % 6 == 4:
            b, prev_DCU = encode_block_U_V(blocks[i], prev_DCU)
            bits += b
        elif i % 6 == 5:
            b, prev_DCV = encode_block_U_V(blocks[i], prev_DCV)
            bits += b
        else:
            b, prev_DCY = encode_block(blocks[i], prev_DCY)
            bits += b
    return bits


def decoder(bits):
    HT.calc_tree(decode_YDC_HT)
    HT2.calc_tree(decode_YAC_HT)
    HT3.calc_tree(decode_UVDC_HT)
    HT4.calc_tree(decode_UVAC_HT)
    blocks = []
    prev_DCY = 0
    prev_DCU = 0
    prev_DCV = 0
    count = 0
    while len(bits) > 0:
        if count % 6 == 4:
            block, bits = decode_block_U_V(bits)
            block[0] += prev_DCU
            prev_DCU = block[0]
        elif count % 6 == 5:
            block, bits = decode_block_U_V(bits)
            block[0] += prev_DCV
            prev_DCV = block[0]
        else:
            block, bits = decode_block(bits)
            block[0] += prev_DCY
            prev_DCY = block[0]
        blocks.append(block)
        count += 1
        print(len(bits))
    return blocks


def encode_block(block, prev):
    bits = []
    if len(block) == 64:
        EOB = []
    else:
        EOB = [1, 0, 1, 0]
    bits += encodeDC(block[0], prev)
    # print(bits)
    prev = block[0]
    block = block[1:]
    zeros = 0
    # print("block", block)
    while len(block) > 0:
        if zeros == 16:
            bits += encode_YAC_HT[240]
            zeros = 0
        if block[0] == 0:
            zeros += 1
        else:
            bits += encodeAC(block[0], zeros)
            # print("add", encodeAC(block[0], zeros))
            zeros = 0
        block = block[1:]
    bits += EOB
    return bits, prev


def decode_block(bits):
    decoded_block = []
    DC, offset = decodeDC(bits)
    decoded_block.append(DC)
    bits = bits[offset:]
    while len(bits) > 0:
        # print(bits)
        AC, zeros, offset = decodeAC(bits)
        if AC == 0 and zeros == 64:  # если EOB
            bits = bits[offset:]
            break
        # print("AC", AC, offset)
        for i in range(zeros):
            decoded_block.append(0)
        decoded_block.append(AC)
        bits = bits[offset:]
        if len(decoded_block) == 64:
            break
    while len(decoded_block) < 64:
        decoded_block.append(0)
    return decoded_block, bits


def encode_block_U_V(block, prev):
    bits = []
    if len(block) == 64:
        EOB = []
    else:
        EOB = [0, 0]
    bits += encodeDC_U_V(block[0], prev)
    # print(bits)
    prev = block[0]
    block = block[1:]
    zeros = 0
    # print("block", block)
    while len(block) > 0:
        if zeros == 16:
            bits += encode_UVAC_HT[240]
            zeros = 0
        if block[0] == 0:
            zeros += 1
        else:
            bits += encodeAC_U_V(block[0], zeros)
            # print("add", encodeAC(block[0], zeros))
            zeros = 0
        block = block[1:]
    bits += EOB
    return bits, prev


def decode_block_U_V(bits):
    decoded_block = []
    DC, offset = decodeDC_U_V(bits)
    decoded_block.append(DC)
    bits = bits[offset:]
    while len(bits) > 0:
        # print(bits)
        AC, zeros, offset = decodeAC_U_V(bits)
        if AC == 0 and zeros == 64:  # если EOB
            bits = bits[offset:]
            break
        # print("AC", AC, zeros, offset)
        for i in range(zeros):
            decoded_block.append(0)
        decoded_block.append(AC)
        bits = bits[offset:]
        if len(decoded_block) == 64:
            break
    while len(decoded_block) < 64:
        decoded_block.append(0)
    return decoded_block, bits
